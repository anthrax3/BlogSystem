@model BlogSystem.Web.InputModels.Comment.CommentInputModel
<div class="post-comment">
    <h3>Leave a Comment</h3>

    @if (User.Identity.IsAuthenticated)
    {
        using (Html.BeginForm("Create", "Comments", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr/>
                @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Content, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control tinymce-editor-comment" } })
                        @Html.ValidationMessageFor(model => model.Content, string.Empty, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Add Comment" class="btn btn-success"/>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p>Only registered users can comment. @Html.Partial("_LoginRegisterPartial")</p>
    }

</div>